---
version: 0.2
phases:
  install:
    commands:
      - echo Installing build dependencies...
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
      - apt-get update && apt-get -y install jq python3-pip python3-dev && pip3 install --upgrade awscli
  pre_build:
      commands:
        # - TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        # - echo $TAG
        # - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' hello-k8s.yml
        - $(aws ecr get-login --no-include-email)
        - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - export DOCKER_TAG=git-${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - docker build -t ${DOCKER_REGISTRY}/${DOCKER_REPO}:${DOCKER_TAG} .
      - docker tag ${DOCKER_REGISTRY}/${DOCKER_REPO}:${DOCKER_TAG} ${DOCKER_REGISTRY}/${DOCKER_REPO}:latest
      - docker push ${DOCKER_REGISTRY}/${DOCKER_REPO}:${DOCKER_TAG}
      - docker push ${DOCKER_REGISTRY}/${DOCKER_REPO}:latest
      - "printf '\ncommitref: %s\n' ${DOCKER_TAG} >> deployspec.yml"

  post_build:
    commands:
      - aws sts get-caller-identity
      - aws eks describe-cluster --name ${EKS_CLUSTER_NAME}
      - aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME}
      - kubectl get nodes
      - kubectl -n core-services set image deploy/hello-world eks-hello-world-testing="${DOCKER_REGISTRY}/${DOCKER_REPO}:${DOCKER_TAG}" --record
      - printf '[{"name":"hello-k8s","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json
artifacts:
  files: build.json